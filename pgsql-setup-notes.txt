sudo bash
sed -i 's/^SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config
setenforce 0

cat /home/centos/.ssh/authorized_keys > /root/.ssh/authorized_keys
sed -i 's/^PasswordAuthentication no/#PasswordAuthentication no/' /etc/ssh/sshd_config
systemctl reload sshd
passwd


yum -y install epel-release
yum -y install nc vim telnet nmap htop python-pip jq wget curl screen git

pip install awscli

mkdir -p ~/.aws
echo '[default]
region = us-east-1' > ~/.aws/config

yum -y install postgresql-server

parted /dev/xvdb mklabel msdos
parted /dev/xvdc mklabel msdos
parted /dev/xvdb mkpart primary 0% 100%
parted /dev/xvdc mkpart primary 0% 100%
mkfs.ext4  /dev/xvdb1
tune2fs -m0 -i0 -c0   /dev/xvdb1
mkfs.ext4  /dev/xvdc1
tune2fs -m0 -i0 -c0   /dev/xvdc1

mkdir -p /opt/pgsql/dbam
mkdir -p /opt/pgsql/dbnz

echo "/dev/xvdb1      /opt/pgsql/dbam         ext4    defaults        0 0" >> /etc/fstab
echo "/dev/xvdc1      /opt/pgsql/dbnz         ext4    defaults        0 0" >> /etc/fstab
mount /opt/pgsql/dbam
mount /opt/pgsql/dbnz


cd /opt/pgsql
git clone https://github.com/kxr/pgsql_aws_splitdb_scripts.git
ln -s pgsql_aws_splitdb_scripts/SetupPostgresqlRole SetupPostgresqlRole
ln -s pgsql_aws_splitdb_scripts/WatchDog_ilb WatchDog_ilb-dbam
ln -s pgsql_aws_splitdb_scripts/WatchDog_ilb WatchDog_ilb-dbnz

chown -R postgres:postgres /opt/pgsql

mv /usr/lib/systemd/system/postgresql.service /usr/lib/systemd/system/postgresql.service.disabled
cp -av /usr/lib/systemd/system/postgresql.service.disabled /usr/lib/systemd/system/postgresql-dbam.service
cp -av /usr/lib/systemd/system/postgresql.service.disabled /usr/lib/systemd/system/postgresql-dbnz.service

sed -i 's#/var/lib/pgsql#/opt/pgsql#' /etc/passwd
sed -i 's#Environment=PGDATA=/var/lib/pgsql/data#Environment=PGDATA=/opt/pgsql/dbam/data#'  /usr/lib/systemd/system/postgresql-dbam.service
sed -i 's#Environment=PGDATA=/var/lib/pgsql/data#Environment=PGDATA=/opt/pgsql/dbnz/data#'  /usr/lib/systemd/system/postgresql-dbnz.service
sed -i 's#Environment=PGPORT=5432#Environment=PGPORT=5433#'  /usr/lib/systemd/system/postgresql-dbnz.service
sed -i '/ExecStartPre=\/usr\/bin\/postgresql-check-db-dir/iExecStartPre=\/opt\/pgsql\/SetupPostgresqlRole' /usr/lib/systemd/system/postgresql-dbam.service
sed -i '/ExecStartPre=\/usr\/bin\/postgresql-check-db-dir/iExecStartPre=\/opt\/pgsql\/SetupPostgresqlRole' /usr/lib/systemd/system/postgresql-dbnz.service

touch /var/log/SetupPostgresqlRole.log
chown postgres /var/log/SetupPostgresqlRole.log


echo '[Unit]
Description=PostgreSQL Split-DB Monitor Scripts for EC2 Cluster

[Service]
Type=oneshot
ExecStart=/opt/pgsql/WatchDog_ilb-dbam
ExecStart=/opt/pgsql/WatchDog_ilb-dbnz
' > /usr/lib/systemd/system/WatchDog_ilb.service

echo '[Unit]
Description=PostgreSQL Split-DB Monitor Timer for EC2 Cluster

[Timer]
OnBootSec=2min
OnCalendar=*:*:0/20
Unit=WatchDog_ilb.service

[Install]
WantedBy=multi-user.target
' > /usr/lib/systemd/system/WatchDog_ilb.timer


systemctl daemon-reload

su - postgres -c 'mkdir -p ~/.aws'
su - postgres -c "echo '[default]
region = us-east-1' > ~/.aws/config"


############################## DBAM - PG1 ###################################
postgresql-setup initdb postgresql-dbam

sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/" /opt/pgsql/dbam/data/postgresql.conf
sed -i 's/#wal_level = minimal/wal_level = hot_standby/' /opt/pgsql/dbam/data/postgresql.conf
sed -i 's/#hot_standby = off/hot_standby = on/' /opt/pgsql/dbam/data/postgresql.conf
sed -i 's/#max_wal_senders = 0/max_wal_senders = 5/' /opt/pgsql/dbam/data/postgresql.conf
sed -i 's/#wal_keep_segments = 0/wal_keep_segments = 16/' /opt/pgsql/dbam/data/postgresql.conf
sed -i 's/#replication_timeout = 60s/replication_timeout = 0/' /opt/pgsql/dbam/data/postgresql.conf
sed -i 's/#archive_mode = off/archive_mode = on/' /opt/pgsql/dbam/data/postgresql.conf
sed -i "s/#archive_command = ''/archive_command = 'cp \"%p\" \/opt\/pgsql\/dbam\/archive\/\"%f\"'/" /opt/pgsql/dbam/data/postgresql.conf
sed -i 's/max_connections = 100/max_connections = 200/' /opt/pgsql/dbam/data/postgresql.conf
sed -i 's/shared_buffers = 32MB/shared_buffers = 128MB/' /opt/pgsql/dbam/data/postgresql.conf
sed -i 's/#work_mem = 1MB/work_mem = 256kB/' /opt/pgsql/dbam/data/postgresql.conf
sed -i 's/#effective_io_concurrency = 1/effective_io_concurrency = 2/' /opt/pgsql/dbam/data/postgresql.conf
sed -i 's/#autovacuum_max_workers = 3/autovacuum_max_workers = 1/' /opt/pgsql/dbam/data/postgresql.conf
sed -i 's/#autovacuum_vacuum_cost_delay = 20ms/autovacuum_vacuum_cost_delay = 100ms/' /opt/pgsql/dbam/data/postgresql.conf

echo 'host  replication   postgres   10.0.1.10/32      trust
host  replication   postgres   10.0.2.10/32      trust
host  all    monuser    10.0.0.0/16    trust
host  dbam   dbamuser   10.0.0.0/16      md5' >> /opt/pgsql/dbam/data/pg_hba.conf


su - postgres -c 'mkdir /opt/pgsql/dbam/archive/'
su - postgres -c 'mkdir /opt/pgsql/dbnz/archive/'

systemctl start postgresql-dbam #Complete the other nodes step uptil here before proceeding

su - postgres -c 'pg_basebackup -h 10.0.2.10 -p 5433 -D /opt/pgsql/dbnz/data -U postgres -v -P --xlog-method=stream'

echo "standby_mode = 'on'
primary_conninfo = 'host=10.0.2.10 port=5433'
trigger_file = '/opt/pgsql/dbnz/trigger'" > /opt/pgsql/dbnz/data/recovery.conf

systemctl start postgresql-dbnz


su - postgres -c 'createuser -p 5432 monuser'
su - postgres -c 'createdb -p 5432 dbam'
su - postgres -c 'createuser -p 5432 dbamuser'
su - postgres -c "psql -p 5432 -c \"alter user dbamuser with encrypted password 'dbampassword'\""
su - postgres -c 'psql -p 5432 -c "grant all privileges on database dbam to dbamuser"'


MY_IID=$(wget -q -O - http://instance-data/latest/meta-data/instance-id)
aws elb register-instances-with-load-balancer --load-balancer-name ilb-dbam --instances $MY_IID


############################## DBNZ - PG2 ###################################

postgresql-setup initdb postgresql-dbnz

sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/" /opt/pgsql/dbnz/data/postgresql.conf
sed -i 's/#wal_level = minimal/wal_level = hot_standby/' /opt/pgsql/dbnz/data/postgresql.conf
sed -i 's/#hot_standby = off/hot_standby = on/' /opt/pgsql/dbnz/data/postgresql.conf
sed -i 's/#max_wal_senders = 0/max_wal_senders = 5/' /opt/pgsql/dbnz/data/postgresql.conf
sed -i 's/#wal_keep_segments = 0/wal_keep_segments = 16/' /opt/pgsql/dbnz/data/postgresql.conf
sed -i 's/#replication_timeout = 60s/replication_timeout = 0/' /opt/pgsql/dbnz/data/postgresql.conf
sed -i 's/#archive_mode = off/archive_mode = on/' /opt/pgsql/dbnz/data/postgresql.conf
sed -i "s/#archive_command = ''/archive_command = 'cp \"%p\" \/opt\/pgsql\/dbnz\/archive\/\"%f\"'/" /opt/pgsql/dbnz/data/postgresql.conf
sed -i 's/max_connections = 100/max_connections = 200/' /opt/pgsql/dbnz/data/postgresql.conf
sed -i 's/shared_buffers = 32MB/shared_buffers = 128MB/' /opt/pgsql/dbnz/data/postgresql.conf
sed -i 's/#work_mem = 1MB/work_mem = 256kB/' /opt/pgsql/dbnz/data/postgresql.conf
sed -i 's/#effective_io_concurrency = 1/effective_io_concurrency = 2/' /opt/pgsql/dbnz/data/postgresql.conf
sed -i 's/#autovacuum_max_workers = 3/autovacuum_max_workers = 1/' /opt/pgsql/dbnz/data/postgresql.conf
sed -i 's/#autovacuum_vacuum_cost_delay = 20ms/autovacuum_vacuum_cost_delay = 100ms/' /opt/pgsql/dbnz/data/postgresql.conf


echo 'host  replication   postgres   10.0.1.10/32      trust
host  replication   postgres   10.0.2.10/32      trust
host  all    monuser    10.0.0.0/16    trust
host  dbnz   dbnzuser   10.0.0.0/16      md5' >> /opt/pgsql/dbnz/data/pg_hba.conf


su - postgres -c 'mkdir /opt/pgsql/dbnz/archive/'
su - postgres -c 'mkdir /opt/pgsql/dbam/archive/'

systemctl start postgresql-dbnz #Complete the other nodes step uptil here before proceeding

su - postgres -c 'pg_basebackup -h 10.0.1.10 -p 5432 -D /opt/pgsql/dbam/data -U postgres -v -P --xlog-method=stream'

echo "standby_mode = 'on'
primary_conninfo = 'host=10.0.1.10 port=5432'
trigger_file = '/opt/pgsql/dbam/trigger'" > /opt/pgsql/dbam/data/recovery.conf

systemctl start postgresql-dbam


su - postgres -c 'createuser -p 5433 monuser'
su - postgres -c 'createdb -p 5433 dbnz'
su - postgres -c 'createuser -p 5433 dbnzuser'
su - postgres -c "psql -p 5433 -c \"alter user dbnzuser with encrypted password 'dbnzpassword'\""
su - postgres -c 'psql -p 5433 -c "grant all privileges on database dbnz to dbnzuser"'


MY_IID=$(wget -q -O - http://instance-data/latest/meta-data/instance-id)
aws elb register-instances-with-load-balancer --load-balancer-name ilb-dbnz --instances $MY_IID
